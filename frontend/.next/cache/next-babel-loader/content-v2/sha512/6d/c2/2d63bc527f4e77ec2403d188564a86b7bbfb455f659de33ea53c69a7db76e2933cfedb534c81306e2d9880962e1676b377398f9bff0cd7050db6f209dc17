{"ast":null,"code":"export default (async (req, res) => {\n  if (req.method === \"POST\") {\n    const {\n      alias,\n      url\n    } = req.body;\n    const result = await fetch(\"https://ristek-link-workers.jonathanfilbert.workers.dev/shorten\", {\n      method: \"POST\",\n      headers: {\n        Authorization: process.env.SECRET,\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        short_url: alias,\n        long_url: url\n      })\n    }).then(res => res.json());\n    return res.status(200).json(result);\n  }\n});","map":{"version":3,"sources":["/Users/jonathanfilbert/workspace/ristek-link/frontend/pages/api/shorten.tsx"],"names":["req","res","method","alias","url","body","result","fetch","headers","Authorization","process","env","SECRET","JSON","stringify","short_url","long_url","then","json","status"],"mappings":"AAEA,gBAAe,OAAOA,GAAP,EAA4BC,GAA5B,KAAqD;AAClE,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiBJ,GAAG,CAACK,IAA3B;AACA,UAAMC,MAAM,GAAG,MAAMC,KAAK,CACxB,iEADwB,EAExB;AACEL,MAAAA,MAAM,EAAE,MADV;AAEEM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEC,OAAO,CAACC,GAAR,CAAYC,MADpB;AAEP,wBAAgB;AAFT,OAFX;AAMEP,MAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,SAAS,EAAEZ,KAAb;AAAoBa,QAAAA,QAAQ,EAAEZ;AAA9B,OAAf;AANR,KAFwB,CAAL,CAUnBa,IAVmB,CAUbhB,GAAD,IAASA,GAAG,CAACiB,IAAJ,EAVK,CAArB;AAWA,WAAOjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqBZ,MAArB,CAAP;AACD;AACF,CAhBD","sourcesContent":["import type { NextApiRequest, NextApiResponse } from \"next\";\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n  if (req.method === \"POST\") {\n    const { alias, url } = req.body;\n    const result = await fetch(\n      \"https://ristek-link-workers.jonathanfilbert.workers.dev/shorten\",\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: process.env.SECRET,\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ short_url: alias, long_url: url }),\n      }\n    ).then((res) => res.json());\n    return res.status(200).json(result);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}